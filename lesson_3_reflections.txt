
1. When would you want to use a remote repository rather than keeping all
   your work local?
   Any time you think you might want a backup of your files and/or when
   working with someone else on a project.
   
2. Why might you want to always pull changes manually rather than having
   Git automatically stay up-to-date with your remote repository?
   It's better to decide when to pull since you may be working on changes
   that could be interrupted by older/newer code from a remote repository.

3. Describe the differences between forks, clones, and branches. When would
   you use one instead of another?
   Forks are used to work off of someone else's code when you don't have
   permission to change the original. Clones are used to work off of your
   own code locally (although you could do this with someone else's code
   but it wouldn't give them credit). Branches are used when we want to work
   off of existing code but leave every thing in place and go a different
   direction.
   
4. What is the benefit of having a copy of the last known state of the
   remote stored locally?
   This is good in cases when you have no internet, but also, when
   collaborating, to make sure that you're working from a conflict-free
   version of the code. Once somone else introduces code, it could possibly
   conflict with the local copy.
   
5. How would you collaborate without using Git or GitHub? What would be
   easier, and what would be harder?
   Use Microsoft Team Foundation Server! lol Without Git, it would be very difficult to work remotely. I imagine everyone would need to work at the
   same time from the same location so that someone could oversee changes
   and conflicts.
